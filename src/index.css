/* #222831
#393E46
#00ADB5
#EEEEEE */
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  padding: 0;
  margin: 0;
}

/* Base Colors */
:root {
  --bg-color: #0a0a0a;
  --box-color: #ffffff;
  --primary-color: #ffed00;
  --secondary-color: #0f6292;
  --alert-color: #cf0a0a;
  --text-color: white;
}

/* Light Mode */
:root.light-mode {
  --bg-color: #ffffff;
  --box-color: #000000;
  --primary-color: #ffed00;
  --secondary-color: #0f6292;
  --alert-color: #cf0a0a;
  --text-color: black;
}

/* Dark Mode */
:root.dark-mode {
  --bg-color: #0a0a0a;
  --box-color: #ffffff;
  --primary-color: #ffed00;
  --secondary-color: #0f6292;
  --alert-color: #cf0a0a;
  --text-color: white;
}

/* Applying Colors */
body {
  background-color: var(--bg-color);
  color: var(--box-color);
  background-image: radial-gradient(
    hsl(from var(--text-color) h s l / 0.05) 2.5px,
    transparent 2.5px
  );
  background-size: 30px 30px;
}
#root {
  width: 100dvw;
  min-height: 100dvh;
}

.box {
  background-color: var(--primary-color);
  border-color: var(--secondary-color);
}

.alert {
  color: var(--alert-color);
}

.lightBulb {
  position: relative;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: var(--text-color);
  transition: 0.5s linear;
  .ray {
    position: absolute;
    width: 2px;
    height: 5px;
    background: var(--text-color);
    top: -0px;
    transform-origin: bottom center;
    opacity: 0;
    transition: opacity 0.5s, transform 5s;
  }
}
.lightBulb::before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: var(--bg-color);
  border-radius: 50%;
  left: 100%;
  opacity: 0;
  transition: 0.5s linear, 0s background;
}
.lightBulb.dark {
  width: 20px;
  height: 20px;
  background: var(--primary-color);
  .ray {
    background: var(--primary-color);
  }
}
.lightBulb.dark::before {
  content: "";
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  left: 50%;
  opacity: 1;
}

.textContainer {
  cursor: pointer;
  overflow: hidden;
  .letter {
    color: var(--bg-color);
    position: relative;
    transition: background 0.3s, transform 0.1s;
  }

  .letter::before {
    content: attr(data-letter);
    position: absolute;
    top: 80%;
    left: 0;
    /* color: var(--text-color); */
    opacity: 0;
    transition: 0.3s;
    transition-delay: inherit;
  }
  .letter::after {
    content: attr(data-letter);
    position: absolute;
    top: 0;
    left: 0;
    /* color: var(--text-color); */
    transition: 0.3s;
    transition-delay: inherit;
    opacity: 1;
  }
}

.textContainer:hover .letter {
  transform: translateX(10px);
}

.textContainer:hover .letter::before {
  top: 0%;
  opacity: 1;
}
.textContainer:hover .letter::after {
  top: -80%;
  opacity: 0;
}

@property --fill {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 0%;
}
.glassBox {
  position: relative;
  border: 1px solid hsl(from var(--text-color) h s l / 0.2);
  background: var(--bg-color);
  border-radius: 0.375rem;
  padding: 1.5rem;
  box-shadow: 0 0 10px hsl(from var(--text-color) h s l / 0.02),
    0 0 20px hsl(from var(--text-color) h s l / 0.02);
}
.glassBox::before {
  position: absolute;
  z-index: -10;
  content: "";
  inset: 0px;
  border-radius: inherit;
  transition: 0.5s cubic-bezier(0.375, 0.885, 0.32, 1.275),
    --fill 0.6s ease-in-out;
  box-shadow: 0 0 0px hsl(from var(--primary-color) h s l / 0.02);
  animation: rgb 10s linear infinite;
}
.glassBox:nth-child(even)::before {
  background: conic-gradient(
    var(--primary-color) var(--fill),
    transparent var(--fill)
  );
}
.glassBox:nth-child(odd)::before {
  background: conic-gradient(
    from -180deg,
    var(--primary-color) var(--fill),
    transparent var(--fill)
  );
}
.glassBox:hover {
  --fill: 100%;
}
.glassBox:hover::before {
  inset: -2px;
  box-shadow: 0 0 10px hsl(from var(--primary-color) h s l / 0.5);
}
@keyframes rgb {
  from {
    filter: hue-rotate(0deg);
  }
  to {
    filter: hue-rotate(360deg);
  }
}

.balatro-container {
  width: 100%;
  height: 100%;
}

.SilkCanvas {
  position: fixed;
  inset: 0;
}

.SilkCanvas canvas {
  opacity: 0.65;
  width: 100% !important;
  height: 100% !important;
}

/* Note: this CSS is only an example, you can overlay whatever you want using the activeItem logic */

#infinite-grid-menu-canvas {
  cursor: grab;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  outline: none;
}

#infinite-grid-menu-canvas:active {
  cursor: grabbing;
}

.action-button {
  position: absolute;
  left: 50%;
  z-index: 10;
  width: 60px;
  height: 60px;
  display: grid;
  place-items: center;
  background: #5227ff;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  border: 5px solid #000;
}

.face-title {
  user-select: none;
  position: absolute;
  font-weight: 900;
  font-size: 4rem;
  left: 10%;
  top: 10%;
  transform: translate(-50%, 0);
}

.action-button-icon {
  user-select: none;
  position: relative;
  color: #fff;
  top: 2px;
  font-size: 26px;
}

.face-title.active {
  opacity: 1;
  pointer-events: auto;
  transition: 0.5s ease;
  transform: translate(0%, 0);
}

.face-title.inactive {
  pointer-events: none;
  opacity: 0;
  transition: 0.1s ease;
}

.face-description {
  user-select: none;
  position: absolute;
  max-width: 20ch;
  top: 21%;
  font-size: 1.5rem;
  left: 10%;
  transform: translate(-90%, 0);
}

.face-description.active {
  opacity: 1;
  pointer-events: auto;
  transition: 0.5s ease;
  transform: translate(0%, 0);
}

.face-description.inactive {
  pointer-events: none;
  opacity: 0;
  transition: 0.1s ease;
}

.action-button {
  position: absolute;
  left: 50%;
}

.action-button.active {
  bottom: 3.8em;
  transform: translateX(-50%) scale(1);
  opacity: 1;
  pointer-events: auto;
  transition: 0.5s ease;
}

.action-button.inactive {
  bottom: -80px;
  transform: translateX(-50%) scale(0);
  opacity: 0;
  pointer-events: none;
  transition: 0.1s ease;
}

@media (max-width: 1500px) {
  .face-title {
    top: 15%;
    font-size: 3rem;
  }
  .face-description {
    top: 25%;
    font-size: 1.25rem;
  }
}

.Menu {
  animation: loadMenuIn 10s linear ease-in-out;
}

@keyframes loadMenuIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.tilted-card-figure {
  position: relative;
  width: 100%;
  height: 100%;
  perspective: 800px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.tilted-card-mobile-alert {
  position: absolute;
  top: 1rem;
  text-align: center;
  font-size: 0.875rem;
  display: none;
}

.tilted-card-inner {
  position: relative;
  transform-style: preserve-3d;
}

.tilted-card-img {
  position: absolute;
  top: 0;
  left: 0;
  object-fit: cover;
  border-radius: 15px;
  will-change: transform;
  transform: translateZ(0);
}

.tilted-card-overlay {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
  will-change: transform;
  transform: translateZ(30px);
}

.tilted-card-caption {
  pointer-events: none;
  position: absolute;
  left: 0;
  top: 0;
  border-radius: 4px;
  background-color: #fff;
  padding: 4px 10px;
  font-size: 10px;
  color: #2d2d2d;
  opacity: 0;
  z-index: 3;
}

.tilted-card-demo-text {
  background: linear-gradient(
    rgba(0, 0, 0, 0.4),
    rgba(0, 0, 0, 0.2),
    rgba(0, 0, 0, 0.6)
  );
  font-size: 0.75em;
  color: white;
  border-radius: 2em;
  padding: 2px 8px;
  backdrop-filter: blur(50px);
  border: 1px solid white;
  text-shadow: 0 0 2px rgba(0, 0, 0, 0.5), 0 0 5px rgba(0, 0, 0, 0.5);
}

.curved-loop-jacket {
  min-height: 80vh;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  position: absolute;
  top: -40vh;
  left: -30vw;
  opacity: 0.05;
}

.curved-loop-svg {
  user-select: none;
  width: 100%;
  aspect-ratio: 100 / 12;
  overflow: visible;
  display: block;
  font-size: 4rem;
  fill: #ffffff;
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  font-weight: 700;
  text-transform: uppercase;
  line-height: 1;
}

.shiny-text {
  color: #b5b5b5a4; /* Adjust this color to change intensity/style */
  background: linear-gradient(
    120deg,
    rgba(255, 255, 255, 0) 40%,
    rgba(255, 255, 255, 0.8) 50%,
    rgba(255, 255, 255, 0) 60%
  );
  background-size: 200% 100%;
  -webkit-background-clip: text;
  background-clip: text;
  display: inline-block;
  animation: shine 5s linear infinite;
}

@keyframes shine {
  0% {
    background-position: 100%;
  }
  100% {
    background-position: -100%;
  }
}

.shiny-text.disabled {
  animation: none;
}

.sticker-container {
  position: relative;
  transform: rotate(var(--peel-direction));
  transform-origin: center;
}

.sticker-container * {
  -webkit-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}

.sticker-main {
  clip-path: polygon(
    var(--sticker-start) var(--sticker-start),
    var(--sticker-end) var(--sticker-start),
    var(--sticker-end) var(--sticker-end),
    var(--sticker-start) var(--sticker-end)
  );
  transition: clip-path 0.6s ease-out;
  filter: url(#dropShadow);
}

.sticker-main > * {
  transform: rotate(calc(-1 * var(--peel-direction)));
}

.sticker-lighting {
  filter: url(#pointLight);
}

.sticker-container:hover .sticker-main,
.sticker-container.touch-active .sticker-main {
  clip-path: polygon(
    var(--sticker-start) var(--sticker-peelback-hover),
    var(--sticker-end) var(--sticker-peelback-hover),
    var(--sticker-end) var(--sticker-end),
    var(--sticker-start) var(--sticker-end)
  );
}

.sticker-container:active .sticker-main {
  clip-path: polygon(
    var(--sticker-start) var(--sticker-peelback-active),
    var(--sticker-end) var(--sticker-peelback-active),
    var(--sticker-end) var(--sticker-end),
    var(--sticker-start) var(--sticker-end)
  );
}

.sticker-image {
  transform: rotate(var(--sticker-rotate));
}

.flap {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: calc(-100% - var(--sticker-p) - var(--sticker-p));
  clip-path: polygon(
    var(--sticker-start) var(--sticker-start),
    var(--sticker-end) var(--sticker-start),
    var(--sticker-end) var(--sticker-start),
    var(--sticker-start) var(--sticker-start)
  );
  transform: scaleY(-1);
  transition: all 0.6s ease-out;
}

.flap > * {
  transform: rotate(calc(-1 * var(--peel-direction)));
}

.sticker-container:hover .flap,
.sticker-container.touch-active .flap {
  clip-path: polygon(
    var(--sticker-start) var(--sticker-start),
    var(--sticker-end) var(--sticker-start),
    var(--sticker-end) var(--sticker-peelback-hover),
    var(--sticker-start) var(--sticker-peelback-hover)
  );
  top: calc(-100% + 2 * var(--sticker-peelback-hover) - 1px);
}

.sticker-container:active .flap {
  clip-path: polygon(
    var(--sticker-start) var(--sticker-start),
    var(--sticker-end) var(--sticker-start),
    var(--sticker-end) var(--sticker-peelback-active),
    var(--sticker-start) var(--sticker-peelback-active)
  );
  top: calc(-100% + 2 * var(--sticker-peelback-active) - 1px);
}

.flap-lighting {
  filter: url(#pointLightFlipped);
}

.flap-image {
  transform: rotate(var(--sticker-rotate));
  filter: url(#expandAndFill);
}

.draggable {
  position: absolute;
  cursor: grab;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
}

.draggable:active {
  cursor: grabbing;
}

/* Mobile-specific optimizations */
@media (hover: none) and (pointer: coarse) {
  .draggable {
    cursor: default;
  }

  .sticker-container {
    touch-action: none;
  }
}

.sticker-image,
.flap-image {
  width: var(--sticker-width, 200px);
}

.sticker-main,
.flap {
  will-change: clip-path, transform;
}

.sticker-ripple {
  position: absolute;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.6);
  pointer-events: none;
  z-index: 10;
}

.glare-hover {
  width: var(--gh-width);
  height: var(--gh-height);
  background: var(--gh-bg);
  border-radius: var(--gh-br);
  border: 1px solid var(--gh-border);
  overflow: hidden;
  position: relative;
  display: grid;
  place-items: center;
}

.glare-hover::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    var(--gh-angle),
    hsla(0, 0%, 0%, 0) 60%,
    var(--gh-rgba) 70%,
    hsla(0, 0%, 0%, 0),
    hsla(0, 0%, 0%, 0) 100%
  );
  transition: var(--gh-duration) ease;
  background-size:
    var(--gh-size) var(--gh-size),
    100% 100%;
  background-repeat: no-repeat;
  background-position:
    -100% -100%,
    0 0;
}

.glare-hover:hover {
  cursor: pointer;
}

.glare-hover:hover::before {
  background-position:
    100% 100%,
    0 0;
}

.glare-hover--play-once::before {
  transition: none;
}

.glare-hover--play-once:hover::before {
  transition: var(--gh-duration) ease;
  background-position:
    100% 100%,
    0 0;
}

.star-border-container {
  display: inline-block;
  position: relative;
  border-radius: 20px;
  overflow: hidden;
}

.border-gradient-bottom {
  position: absolute;
  width: 300%;
  height: 50%;
  opacity: 0.7;
  bottom: -12px;
  right: -250%;
  border-radius: 50%;
  animation: star-movement-bottom linear infinite alternate;
  z-index: 0;
}

.border-gradient-top {
  position: absolute;
  opacity: 0.7;
  width: 300%;
  height: 50%;
  top: -12px;
  left: -250%;
  border-radius: 50%;
  animation: star-movement-top linear infinite alternate;
  z-index: 0;
}

.inner-content {
  position: relative;
  border: 1px solid #222;
  background: #000;
  color: white;
  font-size: 16px;
  text-align: center;
  border-radius: 20px;
  z-index: 1;
}

@keyframes star-movement-bottom {
  0% {
    transform: translate(0%, 0%);
    opacity: 1;
  }
  100% {
    transform: translate(-100%, 0%);
    opacity: 0;
  }
}

@keyframes star-movement-top {
  0% {
    transform: translate(0%, 0%);
    opacity: 1;
  }
  100% {
    transform: translate(100%, 0%);
    opacity: 0;
  }
}

.laser-flow-container {
  width: 100%;
  height: 100%;
  position: relative;
  pointer-events: none;
}

.card-swap-container {
  position: absolute;
  bottom: 0;
  right: 0;
  transform: translate(5%, 20%);
  transform-origin: bottom right;

  perspective: 900px;
  overflow: visible;
}

.card {
  position: absolute;
  top: 50%;
  left: 50%;
  border-radius: 12px;
  border: 1px solid #ffffff30;
  background: #00000060;
  backdrop-filter: blur(40px);

  transform-style: preserve-3d;
  will-change: transform;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

@media (max-width: 768px) {
  .card-swap-container {
    transform: scale(0.75) translate(25%, 25%);
  }
}

@media (max-width: 480px) {
  .card-swap-container {
    transform: scale(0.55) translate(25%, 25%);
  }
}

.light-rays-container {
  width: 100%;
  height: 100%;
  position: relative;
  pointer-events: none;
  z-index: 3;
  overflow: hidden;
}

@media (max-width: 640px) {
  .curved-loop-jacket {
    width: 200%;
    top: -40vh;
    left: -100vw;
  }
  .tilted-card-mobile-alert {
    display: block;
  }
  .tilted-card-caption {
    display: none;
  }
}
