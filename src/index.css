/* #222831
#393E46
#00ADB5
#EEEEEE */
@tailwind base;
@tailwind components;
@tailwind utilities;

*{
  padding: 0;
  margin: 0;
  height: 100%;
}

/* Base Colors */
:root {
  --bg-color: #0a0a0a;
  --box-color: #ffffff;
  --primary-color: #ffed00;
  --secondary-color: #0f6292;
  --alert-color: #cf0a0a;
  --text-color: white;
}

/* Light Mode */
:root.light-mode {
  --bg-color: #ffffff;
  --box-color: #000000;
  --primary-color: #ffed00;
  --secondary-color: #0f6292;
  --alert-color: #cf0a0a;
  --text-color: black;
}

/* Dark Mode */
:root.dark-mode {
  --bg-color: #0a0a0a;
  --box-color: #ffffff;
  --primary-color: #ffed00;
  --secondary-color: #0f6292;
  --alert-color: #cf0a0a;
  --text-color: white;
}

/* Applying Colors */
body {
  background-color: var(--bg-color);
  color: var(--box-color);
  background-image: radial-gradient(hsl(from var(--text-color) h s l / .05) 2.5px, transparent 2.5px);
  background-size: 30px 30px;
}
#root{
    width: 100dvw;
    min-height: 100dvh;
}

.box {
  background-color: var(--primary-color);
  border-color: var(--secondary-color);
}

.alert {
  color: var(--alert-color);
}

.lightBulb {
  position: relative;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: var(--text-color);
  transition: 0.5s linear;
  .ray {
    position: absolute;
    width: 2px;
    height: 5px;
    background: var(--text-color);
    top: -0px;
    transform-origin: bottom center;
    opacity: 0;
    transition: opacity 0.5s, transform 5s;
  }
}
.lightBulb::before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: var(--bg-color);
  border-radius: 50%;
  left: 100%;
  opacity: 0;
  transition: 0.5s linear, 0s background;
}
.lightBulb.dark {
  width: 20px;
  height: 20px;
  background: var(--primary-color);
  .ray {
    background: var(--primary-color);
  }
}
.lightBulb.dark::before {
  content: "";
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  left: 50%;
  opacity: 1;
}

.textContainer {
  cursor: pointer;
  overflow: hidden;
  .letter {
    color: var(--bg-color);
    position: relative;
    transition: background 0.3s, transform 0.1s;
  }

  .letter::before {
    content: attr(data-letter);
    position: absolute;
    top: 80%;
    left: 0;
    /* color: var(--text-color); */
    opacity:0;
    transition: 0.3s;
    transition-delay: inherit;
  }
  .letter::after {
    content: attr(data-letter);
    position: absolute;
    top: 0;
    left: 0;
    /* color: var(--text-color); */
    transition: 0.3s;
    transition-delay: inherit;
    opacity:1;
  }
}

.textContainer:hover .letter {
  transform: translateX(10px);
}

.textContainer:hover .letter::before {
  top: 0%;
  opacity:1;
}
.textContainer:hover .letter::after {
  top: -80%;
  opacity:0;
}

@property --fill{
  syntax:'<percentage>';
  inherits:true;
  initial-value:0%;
}
.glassBox{
  position:relative;
  border:1px solid hsl(from var(--text-color) h s l / .2);
  background:var(--bg-color);
  border-radius: 0.375rem;
  padding: 1.5rem;
  box-shadow:0 0 10px hsl(from var(--text-color) h s l / .02),0 0 20px hsl(from var(--text-color) h s l / .02);
}
.glassBox::before{
  position:absolute;
  z-index:-10;
  content:'';
  inset:0px;
  border-radius:inherit;
  transition: .5s cubic-bezier(0.375, 0.885, 0.32, 1.275),--fill 0.6s ease-in-out;
  box-shadow: 0 0 0px hsl(from var(--primary-color) h s l / .02);
  animation: rgb 10s linear infinite;
}
.glassBox:nth-child(even)::before{
  background:conic-gradient(var(--primary-color) var(--fill), transparent var(--fill));
}
.glassBox:nth-child(odd)::before{
  background:conic-gradient(from -180deg,var(--primary-color) var(--fill), transparent var(--fill));
}
.glassBox:hover{
  --fill:100%;
}
.glassBox:hover::before{
  inset:-2px;
  box-shadow: 0 0 10px hsl(from var(--primary-color) h s l / .5);
}
@keyframes rgb {
  from{
    filter:hue-rotate(0deg);
  }to{
    filter:hue-rotate(360deg);
  }
}

.balatro-container {
  width: 100%;
  height: 100%;
}

.SilkCanvas{
  position: fixed;
  inset: 0;
  
}

.SilkCanvas canvas{
  opacity: .65;
  width: 100% !important;
  height: 100% !important;
}

/* Note: this CSS is only an example, you can overlay whatever you want using the activeItem logic */

#infinite-grid-menu-canvas {
  cursor: grab;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  outline: none;
}

#infinite-grid-menu-canvas:active {
  cursor: grabbing;
}

.action-button {
  position: absolute;
  left: 50%;
  z-index: 10;
  width: 60px;
  height: 60px;
  display: grid;
  place-items: center;
  background: #5227FF;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  border: 5px solid #000;
}

.face-title {
  user-select: none;
  position: absolute;
  font-weight: 900;
  font-size: 4rem;
  left: 10%;
  top: 10%;
  transform: translate(-50%,0);
}

.action-button-icon {
  user-select: none;
  position: relative;
  color: #fff;
  top: 2px;
  font-size: 26px;
}

.face-title.active {
  opacity: 1;
  pointer-events: auto;
  transition: 0.5s ease;
  transform: translate(0%,0);
}

.face-title.inactive {
  pointer-events: none;
  opacity: 0;
  transition: 0.1s ease;
}

.face-description {
  user-select: none;
  position: absolute;
  max-width: 20ch;
  top: 21%;
  font-size: 1.5rem;
  left: 10%;
  transform: translate(-90%,0);
}

.face-description.active {
  opacity: 1;
  pointer-events: auto;
  transition: 0.5s ease;
  transform: translate(0%,0);
}

.face-description.inactive {
  pointer-events: none;
  opacity: 0;
  transition: 0.1s ease;
}

.action-button {
  position: absolute;
  left: 50%;
}

.action-button.active {
  bottom: 3.8em;
  transform: translateX(-50%) scale(1);
  opacity: 1;
  pointer-events: auto;
  transition: 0.5s ease;
}

.action-button.inactive {
  bottom: -80px;
  transform: translateX(-50%) scale(0);
  opacity: 0;
  pointer-events: none;
  transition: 0.1s ease;
}

@media (max-width: 1500px) {
  .face-title {
    top: 15%;
  font-size: 3rem;
  }.face-description {
    top: 25%;
  font-size: 1.25rem;
  }
}

.Menu{
  animation: loadMenuIn 10s linear ease-in-out;
}

@keyframes loadMenuIn {
  from{
    opacity: 0;
  }
  to{
    opacity: 1;
  }
}